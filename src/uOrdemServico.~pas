unit uOrdemServico;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, ExtCtrls, Buttons, Menus, StdCtrls, Mask, DBCtrls, Grids,
  DBGrids, frxClass, frxDBSet, frxExportPDF, ShellApi;

type
  TfrmOrdemServico = class(TForm)
    Panel1: TPanel;
    btnNovo: TSpeedButton;
    btnEditar: TSpeedButton;
    btnSalvar: TSpeedButton;
    btnCancelar: TSpeedButton;
    btnExcluir: TSpeedButton;
    btnImprimir: TSpeedButton;
    btnPDF: TSpeedButton;
    Panel2: TPanel;
    btnSair: TSpeedButton;
    PopUp1: TPopupMenu;
    N1: TMenuItem;
    E1: TMenuItem;
    S1: TMenuItem;
    C1: TMenuItem;
    E2: TMenuItem;
    I1: TMenuItem;
    P1: TMenuItem;
    S2: TMenuItem;
    Panel3: TPanel;
    Panel4: TPanel;
    lbl9: TLabel;
    DBedtID1: TDBEdit;
    lbl10: TLabel;
    DBedtCLIENTE_ID1: TDBEdit;
    lbl11: TLabel;
    DBedtDATA_ABERTURA1: TDBEdit;
    lbl12: TLabel;
    DBedtDATA_PREVISTA1: TDBEdit;
    lbl13: TLabel;
    DBedtDATA_FECHAMENTO1: TDBEdit;
    lbl14: TLabel;
    dblkcbbCLIENTE_ID: TDBLookupComboBox;
    DBcbbSTATUS1: TDBComboBox;
    lbl15: TLabel;
    lbl16: TLabel;
    DBedtVALOR_TOTAL1: TDBEdit;
    DBGrid1: TDBGrid;
    Panel5: TPanel;
    lbl1: TLabel;
    btnInserirItem: TSpeedButton;
    btnEditarItem: TSpeedButton;
    btnExcluirItem: TSpeedButton;
    DBMemoDESCRICAO_PROBLEMA: TDBMemo;
    btnConsultar: TSpeedButton;
    DBNavigator1: TDBNavigator;
    frxReport1: TfrxReport;
    frxDBDatasetOrdem: TfrxDBDataset;
    frxDBDatasetItem: TfrxDBDataset;
    procedure N1Click(Sender: TObject);
    procedure E1Click(Sender: TObject);
    procedure S1Click(Sender: TObject);
    procedure C1Click(Sender: TObject);
    procedure E2Click(Sender: TObject);
    procedure I1Click(Sender: TObject);
    procedure S2Click(Sender: TObject);
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure FormShow(Sender: TObject);
    procedure btnNovoClick(Sender: TObject);
    procedure btnEditarClick(Sender: TObject);
    procedure btnSalvarClick(Sender: TObject);
    procedure btnSairClick(Sender: TObject);
    procedure btnCancelarClick(Sender: TObject);
    procedure btnExcluirClick(Sender: TObject);
    procedure btnInserirItemClick(Sender: TObject);
    procedure btnEditarItemClick(Sender: TObject);
    procedure btnExcluirItemClick(Sender: TObject);
    procedure DBGrid1DrawColumnCell(Sender: TObject; const Rect: TRect;
      DataCol: Integer; Column: TColumn; State: TGridDrawState);
    procedure DBGrid1KeyDown(Sender: TObject; var Key: Word;
      Shift: TShiftState);
    procedure DBGrid1DblClick(Sender: TObject);
    procedure DBedtCLIENTE_ID1KeyDown(Sender: TObject; var Key: Word;
      Shift: TShiftState);
    procedure dblkcbbCLIENTE_IDKeyDown(Sender: TObject; var Key: Word;
      Shift: TShiftState);
    procedure DBcbbSTATUS1KeyDown(Sender: TObject; var Key: Word;
      Shift: TShiftState);
    procedure DBedtCLIENTE_ID1Enter(Sender: TObject);
    procedure dblkcbbCLIENTE_IDEnter(Sender: TObject);
    procedure DBedtVALOR_TOTAL1Enter(Sender: TObject);
    procedure DBedtDATA_ABERTURA1Enter(Sender: TObject);
    procedure DBedtDATA_PREVISTA1Enter(Sender: TObject);
    procedure DBedtDATA_FECHAMENTO1Enter(Sender: TObject);
    procedure DBcbbSTATUS1Enter(Sender: TObject);
    procedure DBMemoDESCRICAO_PROBLEMAEnter(Sender: TObject);
    procedure DBedtCLIENTE_ID1Exit(Sender: TObject);
    procedure dblkcbbCLIENTE_IDExit(Sender: TObject);
    procedure DBedtVALOR_TOTAL1Exit(Sender: TObject);
    procedure DBedtDATA_ABERTURA1Exit(Sender: TObject);
    procedure DBedtDATA_PREVISTA1Exit(Sender: TObject);
    procedure DBedtDATA_FECHAMENTO1Exit(Sender: TObject);
    procedure DBcbbSTATUS1Exit(Sender: TObject);
    procedure DBMemoDESCRICAO_PROBLEMAExit(Sender: TObject);
    procedure DBedtCLIENTE_ID1KeyPress(Sender: TObject; var Key: Char);
    procedure dblkcbbCLIENTE_IDKeyPress(Sender: TObject; var Key: Char);
    procedure DBcbbSTATUS1KeyPress(Sender: TObject; var Key: Char);
    procedure btnConsultarClick(Sender: TObject);
    procedure btnImprimirClick(Sender: TObject);
    procedure btnPDFClick(Sender: TObject);
  private
    { Private declarations }
    procedure modo_navegacao();
    procedure modo_edicao();
    procedure AtualizarTotal();
    procedure ExportarParaPDF();
  public
    { Public declarations }
  end;

var
  frmOrdemServico: TfrmOrdemServico;
  FNovaOrdemServico: Boolean;
  FNovoItemOrdem: Boolean;
  FOrdemServicoConsultada: Integer;

implementation

uses uDM, uUtilidades, uMenu, uItemOrdemEditar, DB, uConsultaOrdemServico;

{$R *.dfm}

procedure TfrmOrdemServico.N1Click(Sender: TObject);
begin
  if(btnNovo.Enabled)then
    btnNovo.Click;
end;

procedure TfrmOrdemServico.E1Click(Sender: TObject);
begin
  if(btnEditar.Enabled)then
    btnEditar.Click;
end;

procedure TfrmOrdemServico.S1Click(Sender: TObject);
begin
  if(btnSalvar.Enabled)then
    btnSalvar.Click;
end;

procedure TfrmOrdemServico.C1Click(Sender: TObject);
begin
  if(btnCancelar.Enabled)then
    btnCancelar.Click;
end;

procedure TfrmOrdemServico.E2Click(Sender: TObject);
begin
  if(btnExcluir.Enabled)then
    btnExcluir.Click;
end;

procedure TfrmOrdemServico.I1Click(Sender: TObject);
begin
  if(btnImprimir.Enabled)then
    btnImprimir.Click;
end;

procedure TfrmOrdemServico.S2Click(Sender: TObject);
begin
  if(btnSair.Enabled)then
    btnSair.Click;
end;

procedure TfrmOrdemServico.modo_navegacao;
begin
  DBedtID1.Enabled := false;
  DBedtCLIENTE_ID1.Enabled := false;
  DBedtDATA_ABERTURA1.Enabled := false;
  DBedtDATA_PREVISTA1.Enabled := false;
  DBedtDATA_FECHAMENTO1.Enabled := false;
  DBedtVALOR_TOTAL1.Enabled := false;
  dblkcbbCLIENTE_ID.Enabled := false;
  DBcbbSTATUS1.Enabled := false;
  DBMemoDESCRICAO_PROBLEMA.Enabled := false;
  btnNovo.Enabled := true;
  btnEditar.Enabled := true;
  btnSalvar.Enabled := false;
  btnCancelar.Enabled := false;
  btnExcluir.Enabled := true;
  btnConsultar.Enabled := true;
  btnImprimir.Enabled := true;
  btnPDF.Enabled := true;
  btnSair.Enabled := true;
  btnInserirItem.Enabled := true;
  btnEditarItem.Enabled := true;
  btnExcluirItem.Enabled := true;
end;

procedure TfrmOrdemServico.modo_edicao;
begin
  DBedtID1.Enabled := true;
  DBedtCLIENTE_ID1.Enabled := true;
  DBedtDATA_ABERTURA1.Enabled := true;
  DBedtDATA_PREVISTA1.Enabled := true;
  DBedtDATA_FECHAMENTO1.Enabled := true;
  DBedtVALOR_TOTAL1.Enabled := true;
  dblkcbbCLIENTE_ID.Enabled := true;
  DBcbbSTATUS1.Enabled := true;
  DBMemoDESCRICAO_PROBLEMA.Enabled := true;
  btnNovo.Enabled := false;
  btnEditar.Enabled := false;
  btnSalvar.Enabled := true;
  btnCancelar.Enabled := true;
  btnExcluir.Enabled := false;
  btnConsultar.Enabled := false;
  btnImprimir.Enabled := false;
  btnPDF.Enabled := false;
  btnSair.Enabled := false;
  btnInserirItem.Enabled := true;
  btnEditarItem.Enabled := true;
  btnExcluirItem.Enabled := true;
end;

procedure TfrmOrdemServico.FormClose(Sender: TObject;
  var Action: TCloseAction);
begin
  if(btnCancelar.Enabled)then
    btnCancelar.Click;
end;

procedure TfrmOrdemServico.FormShow(Sender: TObject);
begin
  modo_navegacao();
end;

procedure TfrmOrdemServico.btnNovoClick(Sender: TObject);
var
  lIDOrdemServico: Integer;
begin
  FNovaOrdemServico := true;
  lIDOrdemServico := TUtilidades.GerarChavePrimaria('ORDEM_SERVICO');
  if(FConexao = 'Zeos')then
  begin
    DM.TOrdemServico.Insert;
    DM.TOrdemServicoID.Value := lIDOrdemServico;
    DM.TOrdemServicoDATA_ABERTURA.Value := date;
    DM.TOrdemServicoSTATUS.Value := 'Aberta';
    DM.TOrdemServico.Post;
    DM.TOrdemServico.ApplyUpdates;
    DM.TOrdemServico.Locate('ID',lIDOrdemServico,[]);
    DM.TOrdemServico.Edit;
  end else
  begin
    DM.TBOrdemServico.Insert;
    DM.TBOrdemServicoID.Value := lIDOrdemServico;
    DM.TBOrdemServicoDATA_ABERTURA.Value := date;
    DM.TBOrdemServicoSTATUS.Value := 'Aberta';
    DM.TBOrdemServico.Post;
    DM.TBOrdemServico.ApplyUpdates(0);
    DM.TBOrdemServico.Locate('ID',lIDOrdemServico,[]);
    DM.TBOrdemServico.Edit;
  end;
  modo_edicao();
  DBedtCLIENTE_ID1.SetFocus;
end;

procedure TfrmOrdemServico.btnEditarClick(Sender: TObject);
begin
  if(FConexao = 'Zeos')then
  begin
    if(DM.TOrdemServico.RecordCount = 0)then
      Abort;
  end else
  begin
    if(DM.TBOrdemServico.RecordCount = 0)then
      Abort;
  end;
    
  FNovaOrdemServico := false;
  if(FConexao = 'Zeos')then
  begin
    DM.TOrdemServico.Edit;
  end else
  begin
    DM.TBOrdemServico.Edit;
  end;
  modo_edicao;
  DBedtCLIENTE_ID1.SetFocus;
end;

procedure TfrmOrdemServico.btnSalvarClick(Sender: TObject);
begin
  DBMemoDESCRICAO_PROBLEMA.SetFocus;   
  if(FConexao = 'Zeos')then
  begin
    if not(DM.TCliente.Locate('ID',DM.TOrdemServicoCLIENTE_ID.AsInteger,[]))then
    begin
      ShowMessage('Cliente não localizado! Informe o cliente');
      DBedtCLIENTE_ID1.SetFocus;
      Abort;
    end;
    DM.TOrdemServico.Post;
    DM.TOrdemServico.ApplyUpdates;
  end else
  begin
    if not(DM.TBCliente.Locate('ID',DM.TBOrdemServicoCLIENTE_ID.AsInteger,[]))then
    begin
      ShowMessage('Cliente não localizado! Informe o cliente');
      DBedtCLIENTE_ID1.SetFocus;
      Abort;
    end;
    DM.TBOrdemServico.Post;
    DM.TBOrdemServico.ApplyUpdates(0);
  end;
  modo_navegacao;
end;

procedure TfrmOrdemServico.btnSairClick(Sender: TObject);
begin
  Close;
end;

procedure TfrmOrdemServico.btnCancelarClick(Sender: TObject);
var
  lOrdemServicoCancelada: Integer;
begin
  DBMemoDESCRICAO_PROBLEMA.SetFocus;
  if(FConexao = 'Zeos')then
  begin
    lOrdemServicoCancelada := DM.TOrdemServicoID.AsInteger;

    if(FNovaOrdemServico)then
    begin
      DM.TItemOrdem.First;
      while not(DM.TItemOrdem.Eof)do
      begin
        DM.TItemOrdem.Delete;
        DM.TItemOrdem.ApplyUpdates;
      end;
    end;

    DM.TOrdemServico.Cancel;
    if(FNovaOrdemServico)then
    begin
      if(DM.TOrdemServico.Locate('ID',lOrdemServicoCancelada,[]))then
      begin
        DM.TOrdemServico.Delete;
        DM.TOrdemServico.ApplyUpdates;
      end;
    end;
  end else
  begin
    lOrdemServicoCancelada := DM.TBOrdemServicoID.AsInteger;

    if(FNovaOrdemServico)then
    begin
      DM.TBItemOrdem.First;
      while not(DM.TBItemOrdem.Eof)do
      begin
        DM.TBItemOrdem.Delete;
        DM.TBItemOrdem.ApplyUpdates(0);
      end;
    end;

    DM.TBOrdemServico.Cancel;
    if(FNovaOrdemServico)then
    begin
      if(DM.TBOrdemServico.Locate('ID',lOrdemServicoCancelada,[]))then
      begin
        DM.TBOrdemServico.Delete;
        DM.TBOrdemServico.ApplyUpdates(0);
      end;
    end;
  end;

  modo_navegacao;
end;

procedure TfrmOrdemServico.btnExcluirClick(Sender: TObject);
begin
  if(FConexao = 'Zeos')then
  begin
    if(DM.TOrdemServico.RecordCount = 0)then
      Abort;
  end else
  begin
    if(DM.TBOrdemServico.RecordCount = 0)then
      Abort;
  end;
    
  if(Application.MessageBox('Você realmente deseja excluir esta ordem de serviço?','Atenção',MB_ICONQUESTION + MB_YESNO)=mrYes)then
  begin
    if(FConexao = 'Zeos')then
    begin
      DM.TItemOrdem.First;
      while not(DM.TItemOrdem.Eof)do
      begin
        DM.TItemOrdem.Delete;
        DM.TItemOrdem.ApplyUpdates;
      end;
      DM.TOrdemServico.Delete;
      DM.TOrdemServico.ApplyUpdates;
    end else
    begin
      DM.TBItemOrdem.First;
      while not(DM.TBItemOrdem.Eof)do
      begin
        DM.TBItemOrdem.Delete;
        DM.TBItemOrdem.ApplyUpdates(0);
      end;
      DM.TBOrdemServico.Delete;
      DM.TBOrdemServico.ApplyUpdates(0);
    end;
  end;
end;

procedure TfrmOrdemServico.btnInserirItemClick(Sender: TObject);
begin
  FNovoItemOrdem := true;
  if(FConexao = 'Zeos')then
  begin
    if(DM.TOrdemServicoID.Value <= 0)then
      Abort;

    DM.TItemOrdem.Insert;
    DM.TItemOrdemORDEM_ID.AsInteger := DM.TOrdemServicoID.AsInteger;
  end else
  begin
    if(DM.TBOrdemServicoID.Value <= 0)then
      Abort;

    DM.TBItemOrdem.Insert;
    DM.TBItemOrdemORDEM_ID.AsInteger := DM.TBOrdemServicoID.AsInteger;
  end;
  frmItemOrdemEditar := TfrmItemOrdemEditar.Create(Self);
  frmItemOrdemEditar.ShowModal;
  AtualizarTotal();
end;

procedure TfrmOrdemServico.btnEditarItemClick(Sender: TObject);
begin
  FNovoItemOrdem := false;
  if(FConexao = 'Zeos')then
  begin
    if(DM.TItemOrdem.RecordCount = 0)then
      Abort;

    DM.TItemOrdem.Edit;
  end else
  begin
    if(DM.TBItemOrdem.RecordCount = 0)then
      Abort;

    DM.TBItemOrdem.Edit;
  end;
  frmItemOrdemEditar := TfrmItemOrdemEditar.Create(Self);
  frmItemOrdemEditar.ShowModal;
  AtualizarTotal();
end;

procedure TfrmOrdemServico.btnExcluirItemClick(Sender: TObject);
begin
  if(Application.MessageBox('Você realmente deseja excluir este item da ordem de serviço?','Atenção',MB_ICONQUESTION + MB_YESNO)=mrYes)then
  begin
    if(FConexao = 'Zeos')then
    begin
      DM.TItemOrdem.Delete;
      DM.TItemOrdem.ApplyUpdates;
    end else
    begin
      DM.TBItemOrdem.Delete;
      DM.TBItemOrdem.ApplyUpdates(0);
    end;
    AtualizarTotal();
  end;
end;

procedure TfrmOrdemServico.AtualizarTotal();
begin
  if(btnEditar.Enabled)then
    btnEditar.Click;

  if(btnSalvar.Enabled)then
  begin
    if(FConexao = 'Zeos')then
    begin
      DM.QVerificar.Close;
      DM.QVerificar.SQL.Clear;
      DM.QVerificar.SQL.Add('SELECT SUM(VALOR_UNITARIO * QUANTIDADE) AS SOMA ');
      DM.QVerificar.SQL.Add('FROM ITEM_ORDEM WHERE ORDEM_ID = :pOrdemServico ');
      DM.QVerificar.Params.ParamByName('pOrdemServico').AsInteger := DM.TOrdemServicoID.AsInteger;
      DM.QVerificar.Open;
      DM.TOrdemServicoVALOR_TOTAL.AsFloat := DM.QVerificar.Fields.FieldByName('SOMA').AsFloat;
    end else
    begin
      DM.QueryVerificar.Close;
      DM.QueryVerificar.SQL.Clear;
      DM.QueryVerificar.SQL.Add('SELECT SUM(VALOR_UNITARIO * QUANTIDADE) AS SOMA ');
      DM.QueryVerificar.SQL.Add('FROM ITEM_ORDEM WHERE ORDEM_ID = :pOrdemServico ');
      DM.QueryVerificar.Params.ParamByName('pOrdemServico').AsInteger := DM.TBOrdemServicoID.AsInteger;
      DM.QueryVerificar.Open;
      DM.TBOrdemServicoVALOR_TOTAL.AsFloat := DM.QueryVerificar.Fields.FieldByName('SOMA').AsFloat;
    end;
  end;
end;

procedure TfrmOrdemServico.DBGrid1DrawColumnCell(Sender: TObject;
  const Rect: TRect; DataCol: Integer; Column: TColumn;
  State: TGridDrawState);
begin
  if(FConexao = 'Zeos')then
  begin
    if not odd(DM.TItemOrdem.RecNo) then
    begin
      if not (gdSelected in State) then
      begin
         DBGrid1.Canvas.Brush.Color := TColor($FFEFE0);
         DBGrid1.Canvas.FillRect(Rect);
         DBGrid1.DefaultDrawDataCell(rect,Column.Field,state);
      end;
    end;
  end else
  begin
    if not odd(DM.TBItemOrdem.RecNo) then
    begin
      if not (gdSelected in State) then
      begin
         DBGrid1.Canvas.Brush.Color := TColor($FFEFE0);
         DBGrid1.Canvas.FillRect(Rect);
         DBGrid1.DefaultDrawDataCell(rect,Column.Field,state);
      end;
    end;
  end;
end;

procedure TfrmOrdemServico.DBGrid1KeyDown(Sender: TObject; var Key: Word;
  Shift: TShiftState);
begin
  if(key = vk_return)and(btnEditarItem.Enabled)then
    btnEditarItem.Click;
end;

procedure TfrmOrdemServico.DBGrid1DblClick(Sender: TObject);
begin
  if(btnEditarItem.Enabled)then
    btnEditarItem.Click;
end;

procedure TfrmOrdemServico.DBedtCLIENTE_ID1KeyDown(Sender: TObject;
  var Key: Word; Shift: TShiftState);
begin
  if((key = vk_return)or(key = 40))then
  begin
    Perform(WM_NEXTDLGCTL,0,0);
  end else
  if(key = 38)then
  begin
    Perform(WM_NEXTDLGCTL,1,0);
  end;
end;

procedure TfrmOrdemServico.dblkcbbCLIENTE_IDKeyDown(Sender: TObject;
  var Key: Word; Shift: TShiftState);
begin
  if(key = vk_return)then
  begin
    Perform(WM_NEXTDLGCTL,0,0);
  end;
end;

procedure TfrmOrdemServico.DBcbbSTATUS1KeyDown(Sender: TObject;
  var Key: Word; Shift: TShiftState);
begin
  if(key = vk_return)then
  begin
    Perform(WM_NEXTDLGCTL,0,0);
  end;
end;

procedure TfrmOrdemServico.DBedtCLIENTE_ID1Enter(Sender: TObject);
begin
  DBedtCLIENTE_ID1.Color := clInfoBk;
end;

procedure TfrmOrdemServico.dblkcbbCLIENTE_IDEnter(Sender: TObject);
begin
  dblkcbbCLIENTE_ID.Color := clInfoBk;
end;

procedure TfrmOrdemServico.DBedtVALOR_TOTAL1Enter(Sender: TObject);
begin
  DBedtVALOR_TOTAL1.Color := clInfoBk;
end;

procedure TfrmOrdemServico.DBedtDATA_ABERTURA1Enter(Sender: TObject);
begin
  DBedtDATA_ABERTURA1.Color := clInfoBk;
end;

procedure TfrmOrdemServico.DBedtDATA_PREVISTA1Enter(Sender: TObject);
begin
  DBedtDATA_PREVISTA1.Color := clInfoBk;
end;

procedure TfrmOrdemServico.DBedtDATA_FECHAMENTO1Enter(Sender: TObject);
begin
  DBedtDATA_FECHAMENTO1.Color := clInfoBk;
end;

procedure TfrmOrdemServico.DBcbbSTATUS1Enter(Sender: TObject);
begin
  DBcbbSTATUS1.Color := clInfoBk;
end;

procedure TfrmOrdemServico.DBMemoDESCRICAO_PROBLEMAEnter(Sender: TObject);
begin
  DBMemoDESCRICAO_PROBLEMA.Color := clInfoBk;
end;

procedure TfrmOrdemServico.DBedtCLIENTE_ID1Exit(Sender: TObject);
begin
  DBedtCLIENTE_ID1.Color := clWhite;
end;

procedure TfrmOrdemServico.dblkcbbCLIENTE_IDExit(Sender: TObject);
begin
  dblkcbbCLIENTE_ID.Color := clWhite;
end;

procedure TfrmOrdemServico.DBedtVALOR_TOTAL1Exit(Sender: TObject);
begin
  DBedtVALOR_TOTAL1.Color := clWhite;
end;

procedure TfrmOrdemServico.DBedtDATA_ABERTURA1Exit(Sender: TObject);
begin
  DBedtDATA_ABERTURA1.Color := clWhite;
end;

procedure TfrmOrdemServico.DBedtDATA_PREVISTA1Exit(Sender: TObject);
begin
  DBedtDATA_PREVISTA1.Color := clWhite;
end;

procedure TfrmOrdemServico.DBedtDATA_FECHAMENTO1Exit(Sender: TObject);
begin
  DBedtDATA_FECHAMENTO1.Color := clWhite;
end;

procedure TfrmOrdemServico.DBcbbSTATUS1Exit(Sender: TObject);
begin
  DBcbbSTATUS1.Color := clWhite;
end;

procedure TfrmOrdemServico.DBMemoDESCRICAO_PROBLEMAExit(Sender: TObject);
begin
  DBMemoDESCRICAO_PROBLEMA.Color := clWhite;
end;

procedure TfrmOrdemServico.DBedtCLIENTE_ID1KeyPress(Sender: TObject;
  var Key: Char);
begin
  if(key = #13)then
    key := #0;
end;

procedure TfrmOrdemServico.dblkcbbCLIENTE_IDKeyPress(Sender: TObject;
  var Key: Char);
begin
  if(key = #13)then
    key := #0;
end;

procedure TfrmOrdemServico.DBcbbSTATUS1KeyPress(Sender: TObject;
  var Key: Char);
begin
  if(key = #13)then
    key := #0;
end;

procedure TfrmOrdemServico.btnConsultarClick(Sender: TObject);
begin
  frmConsultaOrdemServico := TfrmConsultaOrdemServico.Create(Self);
  frmConsultaOrdemServico.ShowModal;
  
  if(FConexao = 'Zeos')then
    DM.TOrdemServico.Locate('ID',FOrdemServicoConsultada,[])
  else
    DM.TBOrdemServico.Locate('ID',FOrdemServicoConsultada,[]);
end;

procedure TfrmOrdemServico.btnImprimirClick(Sender: TObject);
begin
  if not (FileExists(FLocalAplicacao+'frOrdemServico.fr3'))then
  begin
    ShowMessage('Arquivo do relatório(frOrdemServico.fr3) não encontrado!');
    Abort;
  end;
  if(FConexao = 'Zeos')then
  begin
    DM.TOrdemServico.Filter := 'ID='+DM.TOrdemServicoID.AsString;
    DM.TOrdemServico.Filtered := true;

    frxDBDatasetOrdem.DataSet := DM.TOrdemServico;
    frxDBDatasetItem.DataSet := DM.TItemOrdem;
  end else
  begin
    DM.TBOrdemServico.Filter := 'ID='+DM.TBOrdemServicoID.AsString;
    DM.TBOrdemServico.Filtered := true;

    frxDBDatasetOrdem.DataSet := DM.TBOrdemServico;
    frxDBDatasetItem.DataSet := DM.TBItemOrdem;
  end;        

  frxReport1.LoadFromFile(FLocalAplicacao+'frOrdemServico.fr3');
  frxReport1.PrepareReport;
  frxReport1.ShowReport;

  if(FConexao = 'Zeos')then
  begin
    DM.TOrdemServico.Filtered := false;
  end else
  begin
    DM.TBOrdemServico.Filtered := false;
  end;
end;

procedure TfrmOrdemServico.ExportarParaPDF();
var
  ExportPDF: TfrxPDFExport;
  SaveDialogPDF: TSaveDialog;
  lNomeArquivo: String;
begin
  frxReport1.PrepareReport;
  
  ExportPDF := TfrxPDFExport.Create(nil);
  SaveDialogPDF := TSaveDialog.Create(Self);
  try
    SaveDialogPDF.Filter := '*.pdf|*.pdf';
    SaveDialogPDF.Execute;
    if(SaveDialogPDF.FileName <> '')then
    begin
      if(LowerCase(Copy(SaveDialogPDF.FileName,Length(SaveDialogPDF.FileName)-4,4))='.pdf')then
        lNomeArquivo := SaveDialogPDF.FileName
      else
        lNomeArquivo := SaveDialogPDF.FileName + '.pdf';

      ExportPDF.FileName := lNomeArquivo;
      ExportPDF.ShowDialog := false;
      ExportPDF.ShowProgress := true;
      ExportPDF.OverwritePrompt := true;
      frxReport1.Export(ExportPDF);

      ShellExecute(handle, 'open', PChar(lNomeArquivo), NiL, NiL, SW_SHOWNORMAL);
    end;
  finally
    ExportPDF.Free;
    SaveDialogPDF.Free;
  end;
end;

procedure TfrmOrdemServico.btnPDFClick(Sender: TObject);
begin
  if not (FileExists(FLocalAplicacao+'frOrdemServico.fr3'))then
  begin
    ShowMessage('Arquivo do relatório(frOrdemServico.fr3) não encontrado!');
    Abort;
  end;
  if(FConexao = 'Zeos')then
  begin
    DM.TOrdemServico.Filter := 'ID='+DM.TOrdemServicoID.AsString;
    DM.TOrdemServico.Filtered := true;

    frxDBDatasetOrdem.DataSet := DM.TOrdemServico;
    frxDBDatasetItem.DataSet := DM.TItemOrdem;
  end else
  begin
    DM.TBOrdemServico.Filter := 'ID='+DM.TBOrdemServicoID.AsString;
    DM.TBOrdemServico.Filtered := true;

    frxDBDatasetOrdem.DataSet := DM.TBOrdemServico;
    frxDBDatasetItem.DataSet := DM.TBItemOrdem;
  end;        

  frxReport1.LoadFromFile(FLocalAplicacao+'frOrdemServico.fr3');

  ExportarParaPDF();

  if(FConexao = 'Zeos')then
  begin
    DM.TOrdemServico.Filtered := false;
  end else
  begin
    DM.TBOrdemServico.Filtered := false;
  end;
end;

end.
