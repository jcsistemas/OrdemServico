unit uConsultaOrdemServico;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, StdCtrls, Mask, Buttons, ExtCtrls, DBCtrls, Grids, DBGrids,
  DBXpress, DB, SqlExpr, FMTBcd, DBClient, Provider,
  ZAbstractRODataset, ZAbstractDataset, ZAbstractTable,
  ZDataset, ZAbstractConnection, ZConnection, Menus;

type
  TfrmConsultaOrdemServico = class(TForm)
    Panel1: TPanel;
    lbl1: TLabel;
    lbl2: TLabel;
    btnAtualizar: TSpeedButton;
    txtDataInicial: TMaskEdit;
    txtDataFinal: TMaskEdit;
    Panel7: TPanel;
    btnSair: TSpeedButton;
    lbl3: TLabel;
    dblkcbbClientes: TDBLookupComboBox;
    DBGrid1: TDBGrid;
    CheckCliente: TCheckBox;
    lblValorTotal: TLabel;
    lblQuantidadeListada: TLabel;
    PopUp1: TPopupMenu;
    A1: TMenuItem;
    S1: TMenuItem;
    procedure btnSairClick(Sender: TObject);
    procedure FormShow(Sender: TObject);
    procedure txtDataInicialKeyDown(Sender: TObject; var Key: Word;
      Shift: TShiftState);
    procedure dblkcbbClientesKeyDown(Sender: TObject; var Key: Word;
      Shift: TShiftState);
    procedure txtDataInicialKeyPress(Sender: TObject; var Key: Char);
    procedure dblkcbbClientesKeyPress(Sender: TObject; var Key: Char);
    procedure txtDataInicialExit(Sender: TObject);
    procedure txtDataFinalExit(Sender: TObject);
    procedure dblkcbbClientesExit(Sender: TObject);
    procedure dblkcbbClientesEnter(Sender: TObject);
    procedure txtDataFinalEnter(Sender: TObject);
    procedure txtDataInicialEnter(Sender: TObject);
    procedure CheckClienteClick(Sender: TObject);
    procedure btnAtualizarClick(Sender: TObject);
    procedure DBGrid1DblClick(Sender: TObject);
    procedure DBGrid1KeyDown(Sender: TObject; var Key: Word;
      Shift: TShiftState);
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure A1Click(Sender: TObject);
    procedure S1Click(Sender: TObject);
    procedure DBGrid1DrawColumnCell(Sender: TObject; const Rect: TRect;
      DataCol: Integer; Column: TColumn; State: TGridDrawState);
  private
    { Private declarations }
    function ObterValorTotal(pDataInicial, pDataFinal: TDateTime; pCliente: Integer): String;
  public
    { Public declarations }
  end;

var
  frmConsultaOrdemServico: TfrmConsultaOrdemServico;

implementation

uses uMenu, uDM, uOrdemServico;

{$R *.dfm}

procedure TfrmConsultaOrdemServico.btnSairClick(Sender: TObject);
begin
  Close;
end;

procedure TfrmConsultaOrdemServico.FormShow(Sender: TObject);
begin
  btnAtualizar.Click;
  txtDataInicial.SetFocus;
end;

procedure TfrmConsultaOrdemServico.txtDataInicialKeyDown(Sender: TObject;
  var Key: Word; Shift: TShiftState);
begin
  if((key = vk_return)or(key = 40))then
  begin
    Perform(WM_NEXTDLGCTL,0,0);
  end else
  if(key = 38)then
  begin
    Perform(WM_NEXTDLGCTL,1,0);
  end;
end;

procedure TfrmConsultaOrdemServico.dblkcbbClientesKeyDown(Sender: TObject;
  var Key: Word; Shift: TShiftState);
begin
  if(key = vk_return)then
  begin
    if(btnAtualizar.Enabled)then
      btnAtualizar.Click;

    DBGrid1.SetFocus;
  end;
end;

procedure TfrmConsultaOrdemServico.txtDataInicialKeyPress(Sender: TObject;
  var Key: Char);
begin
  if(key = #13)then
    key := #0;
end;

procedure TfrmConsultaOrdemServico.dblkcbbClientesKeyPress(Sender: TObject;
  var Key: Char);
begin
  if(key = #13)then
    key := #0;
end;

procedure TfrmConsultaOrdemServico.txtDataInicialExit(Sender: TObject);
begin
  txtDataInicial.Color := clWhite;
end;

procedure TfrmConsultaOrdemServico.txtDataFinalExit(Sender: TObject);
begin
  txtDataFinal.Color := clWhite;
end;

procedure TfrmConsultaOrdemServico.dblkcbbClientesExit(Sender: TObject);
begin
  dblkcbbClientes.Color := clWhite;
end;

procedure TfrmConsultaOrdemServico.dblkcbbClientesEnter(Sender: TObject);
begin
  dblkcbbClientes.Color := clInfoBk;
end;

procedure TfrmConsultaOrdemServico.txtDataFinalEnter(Sender: TObject);
begin
  txtDataFinal.Color := clInfoBk;
end;

procedure TfrmConsultaOrdemServico.txtDataInicialEnter(Sender: TObject);
begin
  txtDataInicial.Color := clInfoBk;
end;

procedure TfrmConsultaOrdemServico.CheckClienteClick(Sender: TObject);
begin
  if(CheckCliente.Checked)then
    dblkcbbClientes.Enabled := false
  else
    dblkcbbClientes.Enabled := true;
end;

procedure TfrmConsultaOrdemServico.btnAtualizarClick(Sender: TObject);
var
  lIDClienteSelecionado: Integer;
  lDataInicial, lDataFinal: TDateTime;
begin
  lIDClienteSelecionado := 0;
  if(dblkcbbClientes.KeyValue <> null)then
    lIDClienteSelecionado := dblkcbbClientes.KeyValue;
    
  if(FConexao = 'Zeos')then
  begin
    DM.TOrdemServico.Filtered := false;
    DM.TOrdemServico.Filter := 'DATA_ABERTURA >= '+QuotedStr(txtDataInicial.Text)+' AND DATA_ABERTURA <= '+QuotedStr(txtDataFinal.Text);
    if(CheckCliente.Checked = false)and(lIDClienteSelecionado > 0)then
    begin
      DM.TOrdemServico.Filter := DM.TOrdemServico.Filter + ' AND CLIENTE_ID = '+IntToStr(lIDClienteSelecionado);
    end;
    DM.TOrdemServico.Filtered := true;
    lblQuantidadeListada.Caption := 'Quantidade Listada: '+IntToStr(DM.TOrdemServico.RecordCount);
  end else
  begin
    DM.TBOrdemServico.Filtered := false;
    DM.TBOrdemServico.Filter := 'DATA_ABERTURA >= '+QuotedStr(txtDataInicial.Text)+' AND DATA_ABERTURA <= '+QuotedStr(txtDataFinal.Text);
    if(Check1.Checked = false)and(lIDClienteSelecionado > 0)then
    begin
      DM.TBOrdemServico.Filter := DM.TBOrdemServico.Filter + ' AND CLIENTE_ID = '+IntToStr(lIDClienteSelecionado);
    end;
    DM.TBOrdemServico.Filtered := true;
    lblQuantidadeListada.Caption := 'Quantidade Listada: '+IntToStr(DM.TBOrdemServico.RecordCount);
  end;
  lDataInicial := StrToDate(txtDataInicial.Text);
  lDataFinal := StrToDate(txtDataFinal.Text);
  lblValorTotal.Caption := 'Valor Total Listado: '
    +ObterValorTotal(lDataInicial,lDataFinal,lIDClienteSelecionado);
end;

procedure TfrmConsultaOrdemServico.DBGrid1DblClick(Sender: TObject);
begin
  Close;
end;

procedure TfrmConsultaOrdemServico.DBGrid1KeyDown(Sender: TObject;
  var Key: Word; Shift: TShiftState);
begin
  if(key = vk_return)then
    Close;
end;

procedure TfrmConsultaOrdemServico.FormClose(Sender: TObject;
  var Action: TCloseAction);
begin
  if(FConexao = 'Zeos')then
  begin
    FOrdemServicoConsultada := DM.TOrdemServicoID.AsInteger;
    DM.TOrdemServico.Filtered := false;
  end else
  begin
    FOrdemServicoConsultada := DM.TBOrdemServicoID.AsInteger;
    DM.TBOrdemServico.Filtered := false;
  end;
end;

function TfrmConsultaOrdemServico.ObterValorTotal(pDataInicial, pDataFinal: TDateTime; pCliente: Integer): String;
var
  lQrySomaDBExpress: TSQLQuery;
  lQrySomaZeos: TZQuery;
begin
  Result := '';
  if(FConexao = 'Zeos')then
  begin
    lQrySomaZeos := TZQuery.Create(nil);
    try
      lQrySomaZeos.Connection := DM.ZConnection1;
      lQrySomaZeos.SQL.Add('SELECT SUM(VALOR_TOTAL) AS VALOR_TOTAL FROM ORDEM_SERVICO ');
      lQrySomaZeos.SQL.Add('WHERE DATA_ABERTURA >= :pDataInicial AND DATA_ABERTURA <= :pDataFinal');

      if(pCliente > 0)then
        lQrySomaZeos.SQL.Add('AND CLIENTE_ID = :pCliente');

      lQrySomaZeos.Params.ParamByName('pDataInicial').AsDate := pDataInicial;
      lQrySomaZeos.Params.ParamByName('pDataFinal').AsDate := pDataFinal;

      if(pCliente > 0)then
        lQrySomaZeos.Params.ParamByName('pCliente').AsInteger := pCliente;

      lQrySomaZeos.Open;
      Result := FormatFloat('R$###,###,##0.00',lQrySomaZeos.Fields.FieldByName('VALOR_TOTAL').AsFloat);
    finally
      lQrySomaZeos.Free;
    end;
  end else
  begin
    lQrySomaDBExpress := TSQLQuery.Create(nil);
    try
      lQrySomaDBExpress.SQLConnection := DM.SQLConnection1;
      lQrySomaDBExpress.SQL.Add('SELECT SUM(VALOR_TOTAL) AS VALOR_TOTAL FROM ORDEM_SERVICO ');
      lQrySomaDBExpress.SQL.Add('WHERE DATA_ABERTURA >= :pDataInicial AND DATA_ABERTURA <= :pDataFinal');

      if(pCliente > 0)then
        lQrySomaDBExpress.SQL.Add('AND CLIENTE_ID = :pCliente');

      lQrySomaDBExpress.Params.ParamByName('pDataInicial').AsDate := pDataInicial;
      lQrySomaDBExpress.Params.ParamByName('pDataFinal').AsDate := pDataFinal;

      if(pCliente > 0)then
        lQrySomaDBExpress.Params.ParamByName('pCliente').AsInteger := pCliente;

      lQrySomaDBExpress.Open;
      Result := FormatFloat('R$###,###,##0.00',lQrySomaDBExpress.Fields.FieldByName('VALOR_TOTAL').AsFloat);
    finally
      lQrySomaDBExpress.Free;
    end;
  end;
end;

procedure TfrmConsultaOrdemServico.A1Click(Sender: TObject);
begin
  if(btnAtualizar.Enabled)then
    btnAtualizar.Click;
end;

procedure TfrmConsultaOrdemServico.S1Click(Sender: TObject);
begin
  if(btnSair.Enabled)then
    btnSair.Click;
end;

procedure TfrmConsultaOrdemServico.DBGrid1DrawColumnCell(Sender: TObject;
  const Rect: TRect; DataCol: Integer; Column: TColumn;
  State: TGridDrawState);
begin
  if(FConexao = 'Zeos')then
  begin
    if not odd(DM.TOrdemServico.RecNo) then
    begin
      if not (gdSelected in State) then
      begin
         DBGrid1.Canvas.Brush.Color := TColor($FFEFE0);
         DBGrid1.Canvas.FillRect(Rect);
         DBGrid1.DefaultDrawDataCell(rect,Column.Field,state);
      end;
    end;
  end else
  begin
    if not odd(DM.TBOrdemServico.RecNo) then
    begin
      if not (gdSelected in State) then
      begin
         DBGrid1.Canvas.Brush.Color := TColor($FFEFE0);
         DBGrid1.Canvas.FillRect(Rect);
         DBGrid1.DefaultDrawDataCell(rect,Column.Field,state);
      end;
    end;
  end;
end;

end.
